<%- contentFor('body') %>
<div class="container py-5">
    <h1 class="mb-4">Checkout</h1>
    
    <% if (!user || user.role !== 'buyer') { %>
        <div class="alert alert-warning">
            Please <a href="/login?redirect=/checkout">login</a> as a buyer to proceed with checkout.
        </div>
    <% } else { %>
        <div class="row">
            <!-- Order Summary -->
            <div class="col-md-4 order-md-2 mb-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Order Summary</h5>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal:</span>
                            <span id="subtotal">₹<%= cart.totalAmount.toFixed(2) %></span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Shipping:</span>
                            <span id="shipping">₹0.00</span>
                        </div>
                        <div class="d-flex justify-content-between mb-3">
                            <strong>Total:</strong>
                            <strong id="total">₹<%= cart.totalAmount.toFixed(2) %></strong>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Checkout Form -->
            <div class="col-md-8 order-md-1">
                <form id="checkoutForm" class="needs-validation" novalidate>
                    <h4 class="mb-3">Shipping Information</h4>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="firstName">First name</label>
                            <input type="text" class="form-control" id="firstName" name="firstName" value="<%= user.firstName %>" required>
                            <div class="invalid-feedback">
                                Valid first name is required.
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="lastName">Last name</label>
                            <input type="text" class="form-control" id="lastName" name="lastName" value="<%= user.lastName %>" required>
                            <div class="invalid-feedback">
                                Valid last name is required.
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="email">Email</label>
                        <input type="email" class="form-control" id="email" name="email" value="<%= user.email %>" required>
                        <div class="invalid-feedback">
                            Please enter a valid email address.
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="address">Address</label>
                        <input type="text" class="form-control" id="address" name="address" required>
                        <div class="invalid-feedback">
                            Please enter your shipping address.
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-5 mb-3">
                            <label for="country">Country</label>
                            <select class="custom-select d-block w-100" id="country" name="country" required>
                                <option value="">Choose...</option>
                                <option value="India">India</option>
                            </select>
                            <div class="invalid-feedback">
                                Please select a valid country.
                            </div>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="state">State</label>
                            <select class="custom-select d-block w-100" id="state" name="state" required>
                                <option value="">Choose...</option>
                                <option value="Andhra Pradesh">Andhra Pradesh</option>
                                <option value="Karnataka">Karnataka</option>
                                <option value="Tamil Nadu">Tamil Nadu</option>
                                <!-- Add more states as needed -->
                            </select>
                            <div class="invalid-feedback">
                                Please provide a valid state.
                            </div>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="zip">Zip</label>
                            <input type="text" class="form-control" id="zip" name="zip" required>
                            <div class="invalid-feedback">
                                Zip code required.
                            </div>
                        </div>
                    </div>

                    <hr class="mb-4">

                    <h4 class="mb-3">Payment</h4>
                    <div class="d-block my-3">
                        <div class="custom-control custom-radio">
                            <input id="razorpay" name="paymentMethod" type="radio" class="custom-control-input" checked required>
                            <label class="custom-control-label" for="razorpay">Razorpay</label>
                        </div>
                    </div>

                    <hr class="mb-4">
                    <button class="btn btn-primary btn-lg btn-block" type="submit" id="payButton">Pay Now</button>
                </form>
            </div>
        </div>
    <% } %>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
// Form validation
(function() {
    'use strict';
    window.addEventListener('load', function() {
        const form = document.getElementById('checkoutForm');
        form.addEventListener('submit', function(event) {
            if (form.checkValidity() === false) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add('was-validated');
        }, false);
    }, false);
})();

// Calculate amount in paise
const amountInPaise = Math.round(<%= cart.totalAmount %> * 100);

// Handle form submission
document.getElementById('checkoutForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const shippingData = {
        name: document.getElementById('firstName').value + ' ' + document.getElementById('lastName').value,
        email: document.getElementById('email').value,
        address: document.getElementById('address').value,
        state: document.getElementById('state').value,
        pincode: document.getElementById('zip').value
    };

    try {
        const response = await fetch('/api/payment/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                shipping: shippingData,
                amount: Math.round(<%= cart.totalAmount %> * 100) // Convert to paise
            })
        });

        const data = await response.json();
        
        if (data.success) {
            const options = {
                key: data.data.key,
                amount: data.data.amount,
                currency: 'INR',
                name: 'Silk Bazaar',
                description: 'Order Payment',
                order_id: data.data.razorpayOrderId,
                handler: async function(response) {
                    try {
                        const verifyResponse = await fetch('/api/payment/verify', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_signature: response.razorpay_signature,
                                orderId: data.data.orderId
                            })
                        });

                        const verifyData = await verifyResponse.json();
                        
                        if (verifyData.success) {
                            window.location.href = '/orders?status=success';
                        } else {
                            // Record payment failure
                            await fetch('/api/payment/failure', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    orderId: data.data.orderId,
                                    reason: verifyData.message || 'Payment verification failed'
                                })
                            });
                            
                            window.location.href = '/orders?status=failed&message=' + encodeURIComponent(verifyData.message || 'Payment verification failed');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        // Record payment failure
                        await fetch('/api/payment/failure', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                orderId: data.data.orderId,
                                reason: 'Payment verification failed'
                            })
                        });
                        
                        window.location.href = '/orders?status=failed&message=' + encodeURIComponent('Payment verification failed');
                    }
                },
                prefill: {
                    name: shippingData.name,
                    email: shippingData.email
                },
                method: {
                    upi: true,
                    card: true,
                    netbanking: true,
                    wallet: true,
                    paylater: true
                },
                theme: {
                    color: '#F37254'
                }
            };

            const rzp = new Razorpay(options);
            rzp.open();
        } else {
            alert(data.message || 'Failed to create order');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('Failed to create order');
    }
});
</script>

<%- contentFor('style') %>
<style>
.bd-placeholder-img {
    font-size: 1.125rem;
    text-anchor: middle;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

@media (min-width: 768px) {
    .bd-placeholder-img-lg {
        font-size: 3.5rem;
    }
}

.form-control:focus {
    border-color: #80bdff;
    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
}

.invalid-feedback {
    display: none;
    width: 100%;
    margin-top: .25rem;
    font-size: 80%;
    color: #dc3545;
}

.was-validated .form-control:invalid ~ .invalid-feedback,
.was-validated .form-control:invalid ~ .invalid-feedback,
.was-validated .custom-select:invalid ~ .invalid-feedback {
    display: block;
}

.was-validated .form-control:valid ~ .valid-feedback,
.was-validated .form-control:valid ~ .valid-feedback,
.was-validated .custom-select:valid ~ .valid-feedback {
    display: block;
}
</style>